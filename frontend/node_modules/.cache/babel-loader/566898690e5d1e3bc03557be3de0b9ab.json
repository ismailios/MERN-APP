{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Projects/Node Js/Recap/nodeJS-ReactJS-Crud/frontend/src/components/auth/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/auth/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const {\n    errors,\n    register,\n    watch,\n    handleSubmit\n  } = useForm();\n  const passwordRef = useRef({});\n  password.current = watch(\"password\", \"\");\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitEventHandler = data => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: 15\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(submitEventHandler),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"username\",\n          className: \"form-control\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          ref: register({\n            required: \"Username is required\",\n            minLength: {\n              value: 2,\n              message: \"Username must have at least 2 characters\"\n            }\n          }),\n          name: \"username\",\n          placeholder: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert alert-danger mt-2\",\n          children: errors.username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setemail(e.target.value),\n          ref: register({\n            required: \"Email is required\",\n            pattern: {\n              value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n              message: \"Email invalid\"\n            }\n          }),\n          className: \"form-control\",\n          name: \"email\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert alert-danger mt-2\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          onChange: e => setPassword(e.target.value),\n          ref: register({\n            required: \"Password is required\",\n            minLength: {\n              value: 6,\n              message: \"Password must have at least 6 characters\"\n            }\n          }),\n          name: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert alert-danger mt-2\",\n          children: errors.password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          ref: register({\n            validate: value => value === password.current || \"The passwords do not match\"\n          }),\n          name: \"password_repeat\",\n          placeholder: \"Password Confirmation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), errors.password_repeat && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"alert alert-danger mt-2\",\n        children: errors.password_repeat.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"uDdCnBz2TDXhsGElgxnah+fvzBE=\", false, function () {\n  return [useForm, useDispatch];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/user/Desktop/Projects/Node Js/Recap/nodeJS-ReactJS-Crud/frontend/src/components/auth/SignUp.js"],"names":["React","useRef","useState","useForm","useDispatch","actions","SignUp","errors","register","watch","handleSubmit","passwordRef","password","current","dispatch","username","setUsername","email","setemail","setPassword","submitEventHandler","data","maxWidth","margin","e","target","value","required","minLength","message","pattern","validate","password_repeat"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../../store/auth/actions\";\n\nconst SignUp = () => {\n  const { errors, register, watch, handleSubmit } = useForm();\n  const passwordRef = useRef({});\n  password.current = watch(\"password\", \"\");\n\n  const dispatch = useDispatch();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const submitEventHandler = (data) => {};\n\n  return (\n    <div style={{ maxWidth: 600, margin: 15 }}>\n      <form onSubmit={handleSubmit(submitEventHandler)}>\n        <div className=\"form-group mb-2\">\n          <input\n            type=\"username\"\n            className=\"form-control\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            ref={register({\n              required: \"Username is required\",\n              minLength: {\n                value: 2,\n                message: \"Username must have at least 2 characters\",\n              },\n            })}\n            name=\"username\"\n            placeholder=\"username\"\n          />\n          {errors.username && (\n            <p className=\"alert alert-danger mt-2\">{errors.username.message}</p>\n          )}\n        </div>\n        <div className=\"form-group mb-2\">\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setemail(e.target.value)}\n            ref={register({\n              required: \"Email is required\",\n              pattern: {\n                value: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                message: \"Email invalid\",\n              },\n            })}\n            className=\"form-control\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n          />\n          {errors.email && (\n            <p className=\"alert alert-danger mt-2\">{errors.email.message}</p>\n          )}\n        </div>\n\n        <div className=\"form-group mb-2\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            onChange={(e) => setPassword(e.target.value)}\n            ref={register({\n              required: \"Password is required\",\n              minLength: {\n                value: 6,\n                message: \"Password must have at least 6 characters\",\n              },\n            })}\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n          {errors.password && (\n            <p className=\"alert alert-danger mt-2\">{errors.password.message}</p>\n          )}\n        </div>\n        <div className=\"form-group mb-2\">\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            ref={register({\n              validate: (value) =>\n                value === password.current || \"The passwords do not match\",\n            })}\n            name=\"password_repeat\"\n            placeholder=\"Password Confirmation\"\n          />\n        </div>\n        {errors.password_repeat && (\n          <p className=\"alert alert-danger mt-2\">\n            {errors.password_repeat.message}\n          </p>\n        )}\n        <button type=\"submit\" className=\"btn btn-primary\">\n          SignUp\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}