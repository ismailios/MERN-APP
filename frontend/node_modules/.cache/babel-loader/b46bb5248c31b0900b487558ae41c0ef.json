{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport Product from \"../../models/Product\";\nimport { ADD_PRODUCT, DELETE_PRODUCT, FETCH_PRODUCTS, SEARCH_PRODUCT, UPDATE_PRODUCT } from \"./actions\";\nconst initialState = {\n  products: []\n};\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      const id = action.productData.id;\n      const title = action.productData.title;\n      const price = action.productData.price;\n      const image = action.productData.image;\n      const description = action.productData.description;\n      const newProduct = new Product(id, title, price, image, description);\n      return {\n        products: state.products.concat(newProduct)\n      };\n\n    case FETCH_PRODUCTS:\n      return {\n        products: action.products\n      };\n\n    case DELETE_PRODUCT:\n      const productId = action.productId;\n      const updatedProducts = state.products.filter(product => product._id !== productId);\n      return {\n        products: updatedProducts\n      };\n\n    case UPDATE_PRODUCT:\n      const prodId = action.id;\n      const updatePr = [...state.products];\n      const selectedProductIndex = state.products.findIndex(p => p._id === prodId);\n      const newUpdateProduct = new Product(prodId, action.productData.title, action.productData.price, action.productData.image, action.productData.description);\n      updatePr[selectedProductIndex] = newUpdateProduct;\n      return {\n        products: updatePr\n      };\n\n    case SEARCH_PRODUCT:\n      const searchTitle = action.title;\n      const searchProducts = state.products.filter(p => p.title === searchTitle);\n      return {\n        products: searchProducts\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/user/Desktop/Projects/Node Js/Recap/nodeJS-ReactJS-Crud/frontend/src/store/product/reducer.js"],"names":["act","Product","ADD_PRODUCT","DELETE_PRODUCT","FETCH_PRODUCTS","SEARCH_PRODUCT","UPDATE_PRODUCT","initialState","products","productReducer","state","action","type","id","productData","title","price","image","description","newProduct","concat","productId","updatedProducts","filter","product","_id","prodId","updatePr","selectedProductIndex","findIndex","p","newUpdateProduct","searchTitle","searchProducts"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,cAAtC,EAAsDC,cAAtD,EAAsEC,cAAtE,QAA4F,WAA5F;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAG;AADM,CAArB;AAKA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAACH,YAAP,EAAoBI,MAApB,KAA+B;AAIzD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKV,WAAL;AACI,YAAMW,EAAE,GAAGF,MAAM,CAACG,WAAP,CAAmBD,EAA9B;AACA,YAAME,KAAK,GAAGJ,MAAM,CAACG,WAAP,CAAmBC,KAAjC;AACA,YAAMC,KAAK,GAAGL,MAAM,CAACG,WAAP,CAAmBE,KAAjC;AACA,YAAMC,KAAK,GAAGN,MAAM,CAACG,WAAP,CAAmBG,KAAjC;AACA,YAAMC,WAAW,GAAGP,MAAM,CAACG,WAAP,CAAmBI,WAAvC;AAGA,YAAMC,UAAU,GAAG,IAAIlB,OAAJ,CAAYY,EAAZ,EAAeE,KAAf,EAAqBC,KAArB,EAA2BC,KAA3B,EAAiCC,WAAjC,CAAnB;AAEA,aAAO;AACHV,QAAAA,QAAQ,EAACE,KAAK,CAACF,QAAN,CAAeY,MAAf,CAAsBD,UAAtB;AADN,OAAP;;AAGJ,SAAKf,cAAL;AACI,aAAO;AACHI,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AADd,OAAP;;AAGJ,SAAKL,cAAL;AACI,YAAMkB,SAAS,GAAEV,MAAM,CAACU,SAAxB;AACA,YAAMC,eAAe,GAAGZ,KAAK,CAACF,QAAN,CAAee,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAiBJ,SAAlD,CAAxB;AACA,aAAO;AACHb,QAAAA,QAAQ,EAACc;AADN,OAAP;;AAIJ,SAAKhB,cAAL;AACI,YAAMoB,MAAM,GAAGf,MAAM,CAACE,EAAtB;AACA,YAAMc,QAAQ,GAAE,CAAC,GAAGjB,KAAK,CAACF,QAAV,CAAhB;AACA,YAAMoB,oBAAoB,GAAGlB,KAAK,CAACF,QAAN,CAAeqB,SAAf,CAAyBC,CAAC,IAAIA,CAAC,CAACL,GAAF,KAAQC,MAAtC,CAA7B;AACA,YAAMK,gBAAgB,GAAG,IAAI9B,OAAJ,CAAYyB,MAAZ,EAAmBf,MAAM,CAACG,WAAP,CAAmBC,KAAtC,EAA4CJ,MAAM,CAACG,WAAP,CAAmBE,KAA/D,EAAqEL,MAAM,CAACG,WAAP,CAAmBG,KAAxF,EAA8FN,MAAM,CAACG,WAAP,CAAmBI,WAAjH,CAAzB;AACAS,MAAAA,QAAQ,CAACC,oBAAD,CAAR,GAAiCG,gBAAjC;AAEA,aAAO;AACJvB,QAAAA,QAAQ,EAACmB;AADL,OAAP;;AAIJ,SAAKtB,cAAL;AACI,YAAM2B,WAAW,GAAGrB,MAAM,CAACI,KAA3B;AAEA,YAAMkB,cAAc,GAAGvB,KAAK,CAACF,QAAN,CAAee,MAAf,CAAsBO,CAAC,IAAEA,CAAC,CAACf,KAAF,KAAUiB,WAAnC,CAAvB;AAEA,aAAO;AACHxB,QAAAA,QAAQ,EAAEyB;AADP,OAAP;;AAUJ;AACI,aAAOvB,KAAP;AArDR;AAuDH,CA3DM","sourcesContent":["import { act } from \"react-dom/test-utils\";\nimport Product from \"../../models/Product\";\nimport { ADD_PRODUCT, DELETE_PRODUCT, FETCH_PRODUCTS, SEARCH_PRODUCT, UPDATE_PRODUCT } from \"./actions\";\n\nconst initialState = {\n    products : []\n}\n\n\nexport const productReducer = (state=initialState,action) => {\n\n    \n\n    switch (action.type) {\n        \n        case ADD_PRODUCT:\n            const id = action.productData.id;\n            const title = action.productData.title;\n            const price = action.productData.price;\n            const image = action.productData.image;\n            const description = action.productData.description; \n\n      \n            const newProduct = new Product(id,title,price,image,description)\n       \n            return {\n                products:state.products.concat(newProduct)\n            }\n        case FETCH_PRODUCTS:\n            return {\n                products: action.products\n            }    \n        case DELETE_PRODUCT:\n            const productId= action.productId;\n            const updatedProducts = state.products.filter(product => product._id !==  productId)\n            return {\n                products:updatedProducts\n             } \n        \n        case UPDATE_PRODUCT:\n            const prodId = action.id;\n            const updatePr =[...state.products]\n            const selectedProductIndex = state.products.findIndex(p => p._id===prodId)\n            const newUpdateProduct = new Product(prodId,action.productData.title,action.productData.price,action.productData.image,action.productData.description)\n            updatePr[selectedProductIndex] = newUpdateProduct;\n            \n            return {\n               products:updatePr\n            }    \n\n        case SEARCH_PRODUCT:\n            const searchTitle = action.title\n           \n            const searchProducts = state.products.filter(p=>p.title===searchTitle)\n\n            return {\n                products :searchProducts\n\n            }    \n\n            \n        \n\n\n    \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}