{"ast":null,"code":"import { BASE_URL } from \"../../config/config\";\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport const SEARCH_PRODUCT = \"SEARCH_PRODUCT\";\nexport const fetchProdcuts = () => {\n  return async (dispatch, getState) => {\n    const token = getState().auth.token;\n    console.log(token);\n    const response = await fetch(BASE_URL + \"products\", {\n      method: \"GET\"\n    });\n    const resData = await response.json();\n    dispatch({\n      type: FETCH_PRODUCTS,\n      products: resData.products,\n      filtred: resData.products\n    });\n  };\n};\nexport const addProduct = (title, price, image, description) => {\n  try {\n    return async dispatch => {\n      let formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"price\", price);\n      formData.append(\"image\", image);\n      formData.append(\"description\", description);\n      const response = await fetch(BASE_URL + \"product\", {\n        method: \"POST\",\n        body: formData\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Somethong went  !!!\");\n      }\n\n      const resData = await response.json();\n      dispatch({\n        type: ADD_PRODUCT,\n        productData: {\n          id: resData._id,\n          title: resData.title,\n          price: resData.price,\n          image: resData.image,\n          description: resData.description\n        }\n      });\n    };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\nexport const updateProduct = (productId, title, price, image, description) => {\n  return async dispatch => {\n    let formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"price\", price);\n    formData.append(\"image\", image);\n    formData.append(\"description\", description);\n    const response = await fetch(BASE_URL + \"product/\" + productId, {\n      method: \"PUT\",\n      body: formData\n    });\n    const resData = await response.json();\n    dispatch({\n      type: UPDATE_PRODUCT,\n      id: productId,\n      productData: {\n        title: resData.title,\n        price: resData.price,\n        image: resData.image,\n        description: resData.description\n      }\n    });\n  };\n};\nexport const deleteProduct = productId => {\n  return async dispatch => {\n    const response = await fetch(BASE_URL + \"product/\" + productId, {\n      method: \"DELETE\"\n    });\n    console.log(response);\n    const resData = await response.json();\n    dispatch({\n      type: DELETE_PRODUCT,\n      productId: productId\n    });\n  };\n};\nexport const searchProduct = searchText => {\n  return {\n    type: SEARCH_PRODUCT,\n    searchText: searchText\n  };\n};","map":{"version":3,"sources":["/Users/user/Desktop/Projects/Node Js/Recap/nodeJS-ReactJS-Crud/frontend/src/store/product/actions.js"],"names":["BASE_URL","ADD_PRODUCT","FETCH_PRODUCTS","DELETE_PRODUCT","UPDATE_PRODUCT","SEARCH_PRODUCT","fetchProdcuts","dispatch","getState","token","auth","console","log","response","fetch","method","resData","json","type","products","filtred","addProduct","title","price","image","description","formData","FormData","append","body","ok","Error","productData","id","_id","error","message","updateProduct","productId","deleteProduct","searchProduct","searchText"],"mappings":"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","sourcesContent":["import { BASE_URL } from \"../../config/config\";\n\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport const SEARCH_PRODUCT = \"SEARCH_PRODUCT\";\n\nexport const fetchProdcuts = () => {\n  return async (dispatch, getState) => {\n    const token = getState().auth.token;\n    console.log(token);\n\n    const response = await fetch(BASE_URL + \"products\", {\n      method: \"GET\",\n    });\n\n    const resData = await response.json();\n\n    dispatch({\n      type: FETCH_PRODUCTS,\n      products: resData.products,\n      filtred: resData.products,\n    });\n  };\n};\n\nexport const addProduct = (title, price, image, description) => {\n  try {\n    return async (dispatch) => {\n      let formData = new FormData();\n      formData.append(\"title\", title);\n      formData.append(\"price\", price);\n      formData.append(\"image\", image);\n      formData.append(\"description\", description);\n\n      const response = await fetch(BASE_URL + \"product\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Somethong went  !!!\");\n      }\n\n      const resData = await response.json();\n\n      dispatch({\n        type: ADD_PRODUCT,\n        productData: {\n          id: resData._id,\n          title: resData.title,\n          price: resData.price,\n          image: resData.image,\n          description: resData.description,\n        },\n      });\n    };\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\nexport const updateProduct = (productId, title, price, image, description) => {\n  return async (dispatch) => {\n    let formData = new FormData();\n    formData.append(\"title\", title);\n    formData.append(\"price\", price);\n    formData.append(\"image\", image);\n    formData.append(\"description\", description);\n\n    const response = await fetch(BASE_URL + \"product/\" + productId, {\n      method: \"PUT\",\n      body: formData,\n    });\n\n    const resData = await response.json();\n\n    dispatch({\n      type: UPDATE_PRODUCT,\n      id: productId,\n      productData: {\n        title: resData.title,\n        price: resData.price,\n        image: resData.image,\n        description: resData.description,\n      },\n    });\n  };\n};\n\nexport const deleteProduct = (productId) => {\n  return async (dispatch) => {\n    const response = await fetch(BASE_URL + \"product/\" + productId, {\n      method: \"DELETE\",\n    });\n    console.log(response);\n    const resData = await response.json();\n\n    dispatch({\n      type: DELETE_PRODUCT,\n      productId: productId,\n    });\n  };\n};\n\nexport const searchProduct = (searchText) => {\n  return {\n    type: SEARCH_PRODUCT,\n    searchText: searchText,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}