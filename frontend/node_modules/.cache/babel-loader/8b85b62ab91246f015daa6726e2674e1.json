{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport Product from \"../../models/Product\";\nimport { ADD_PRODUCT, DELETE_PRODUCT, FETCH_PRODUCTS, searchProduct, SEARCH_PRODUCT, UPDATE_PRODUCT } from \"./actions\";\nconst initialState = {\n  products: [],\n  filtredProducts: state.products.filter(p => {\n    return p.title.toLowerCase().indexOf(searchTitle.toLowerCase()) !== -1;\n  })\n};\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      const id = action.productData.id;\n      const title = action.productData.title;\n      const price = action.productData.price;\n      const image = action.productData.image;\n      const description = action.productData.description;\n      const newProduct = new Product(id, title, price, image, description);\n      return {\n        products: state.products.concat(newProduct)\n      };\n\n    case FETCH_PRODUCTS:\n      return {\n        products: action.products\n      };\n\n    case DELETE_PRODUCT:\n      const productId = action.productId;\n      const updatedProducts = state.products.filter(product => product._id !== productId);\n      return {\n        products: updatedProducts\n      };\n\n    case UPDATE_PRODUCT:\n      const prodId = action.id;\n      const updatePr = [...state.products];\n      const selectedProductIndex = state.products.findIndex(p => p._id === prodId);\n      const newUpdateProduct = new Product(prodId, action.productData.title, action.productData.price, action.productData.image, action.productData.description);\n      updatePr[selectedProductIndex] = newUpdateProduct;\n      return {\n        products: updatePr\n      };\n\n    case SEARCH_PRODUCT:\n      const searchTitle = action.title;\n      const filtredProducts = state.products.filter(p => {\n        return p.title.toLowerCase().indexOf(searchTitle.toLowerCase()) !== -1;\n      });\n      return { ...state,\n        filtredProducts: filtredProducts\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/user/Desktop/Projects/Node Js/Recap/nodeJS-ReactJS-Crud/frontend/src/store/product/reducer.js"],"names":["act","Product","ADD_PRODUCT","DELETE_PRODUCT","FETCH_PRODUCTS","searchProduct","SEARCH_PRODUCT","UPDATE_PRODUCT","initialState","products","filtredProducts","state","filter","p","title","toLowerCase","indexOf","searchTitle","productReducer","action","type","id","productData","price","image","description","newProduct","concat","productId","updatedProducts","product","_id","prodId","updatePr","selectedProductIndex","findIndex","newUpdateProduct"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,cANF,QAOO,WAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,eAAe,EAAEC,KAAK,CAACF,QAAN,CAAeG,MAAf,CAAuBC,CAAD,IAAO;AAC5C,WAAOA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,OAAtB,CAA8BC,WAAW,CAACF,WAAZ,EAA9B,MAA6D,CAAC,CAArE;AACD,GAFgB;AAFE,CAArB;AAOA,OAAO,MAAMG,cAAc,GAAG,CAACP,KAAK,GAAGH,YAAT,EAAuBW,MAAvB,KAAkC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,WAAL;AACE,YAAMmB,EAAE,GAAGF,MAAM,CAACG,WAAP,CAAmBD,EAA9B;AACA,YAAMP,KAAK,GAAGK,MAAM,CAACG,WAAP,CAAmBR,KAAjC;AACA,YAAMS,KAAK,GAAGJ,MAAM,CAACG,WAAP,CAAmBC,KAAjC;AACA,YAAMC,KAAK,GAAGL,MAAM,CAACG,WAAP,CAAmBE,KAAjC;AACA,YAAMC,WAAW,GAAGN,MAAM,CAACG,WAAP,CAAmBG,WAAvC;AAEA,YAAMC,UAAU,GAAG,IAAIzB,OAAJ,CAAYoB,EAAZ,EAAgBP,KAAhB,EAAuBS,KAAvB,EAA8BC,KAA9B,EAAqCC,WAArC,CAAnB;AAEA,aAAO;AACLhB,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAekB,MAAf,CAAsBD,UAAtB;AADL,OAAP;;AAGF,SAAKtB,cAAL;AACE,aAAO;AACLK,QAAAA,QAAQ,EAAEU,MAAM,CAACV;AADZ,OAAP;;AAGF,SAAKN,cAAL;AACE,YAAMyB,SAAS,GAAGT,MAAM,CAACS,SAAzB;AACA,YAAMC,eAAe,GAAGlB,KAAK,CAACF,QAAN,CAAeG,MAAf,CACrBkB,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBH,SADP,CAAxB;AAGA,aAAO;AACLnB,QAAAA,QAAQ,EAAEoB;AADL,OAAP;;AAIF,SAAKtB,cAAL;AACE,YAAMyB,MAAM,GAAGb,MAAM,CAACE,EAAtB;AACA,YAAMY,QAAQ,GAAG,CAAC,GAAGtB,KAAK,CAACF,QAAV,CAAjB;AACA,YAAMyB,oBAAoB,GAAGvB,KAAK,CAACF,QAAN,CAAe0B,SAAf,CAC1BtB,CAAD,IAAOA,CAAC,CAACkB,GAAF,KAAUC,MADU,CAA7B;AAGA,YAAMI,gBAAgB,GAAG,IAAInC,OAAJ,CACvB+B,MADuB,EAEvBb,MAAM,CAACG,WAAP,CAAmBR,KAFI,EAGvBK,MAAM,CAACG,WAAP,CAAmBC,KAHI,EAIvBJ,MAAM,CAACG,WAAP,CAAmBE,KAJI,EAKvBL,MAAM,CAACG,WAAP,CAAmBG,WALI,CAAzB;AAOAQ,MAAAA,QAAQ,CAACC,oBAAD,CAAR,GAAiCE,gBAAjC;AAEA,aAAO;AACL3B,QAAAA,QAAQ,EAAEwB;AADL,OAAP;;AAIF,SAAK3B,cAAL;AACE,YAAMW,WAAW,GAAGE,MAAM,CAACL,KAA3B;AAEA,YAAMJ,eAAe,GAAGC,KAAK,CAACF,QAAN,CAAeG,MAAf,CAAuBC,CAAD,IAAO;AACnD,eAAOA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,OAAtB,CAA8BC,WAAW,CAACF,WAAZ,EAA9B,MAA6D,CAAC,CAArE;AACD,OAFuB,CAAxB;AAIA,aAAO,EACL,GAAGJ,KADE;AAELD,QAAAA,eAAe,EAAEA;AAFZ,OAAP;;AAKF;AACE,aAAOC,KAAP;AA1DJ;AA4DD,CA7DM","sourcesContent":["import { act } from \"react-dom/test-utils\";\nimport Product from \"../../models/Product\";\nimport {\n  ADD_PRODUCT,\n  DELETE_PRODUCT,\n  FETCH_PRODUCTS,\n  searchProduct,\n  SEARCH_PRODUCT,\n  UPDATE_PRODUCT,\n} from \"./actions\";\n\nconst initialState = {\n  products: [],\n  filtredProducts: state.products.filter((p) => {\n    return p.title.toLowerCase().indexOf(searchTitle.toLowerCase()) !== -1;\n  }),\n};\n\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      const id = action.productData.id;\n      const title = action.productData.title;\n      const price = action.productData.price;\n      const image = action.productData.image;\n      const description = action.productData.description;\n\n      const newProduct = new Product(id, title, price, image, description);\n\n      return {\n        products: state.products.concat(newProduct),\n      };\n    case FETCH_PRODUCTS:\n      return {\n        products: action.products,\n      };\n    case DELETE_PRODUCT:\n      const productId = action.productId;\n      const updatedProducts = state.products.filter(\n        (product) => product._id !== productId\n      );\n      return {\n        products: updatedProducts,\n      };\n\n    case UPDATE_PRODUCT:\n      const prodId = action.id;\n      const updatePr = [...state.products];\n      const selectedProductIndex = state.products.findIndex(\n        (p) => p._id === prodId\n      );\n      const newUpdateProduct = new Product(\n        prodId,\n        action.productData.title,\n        action.productData.price,\n        action.productData.image,\n        action.productData.description\n      );\n      updatePr[selectedProductIndex] = newUpdateProduct;\n\n      return {\n        products: updatePr,\n      };\n\n    case SEARCH_PRODUCT:\n      const searchTitle = action.title;\n\n      const filtredProducts = state.products.filter((p) => {\n        return p.title.toLowerCase().indexOf(searchTitle.toLowerCase()) !== -1;\n      });\n\n      return {\n        ...state,\n        filtredProducts: filtredProducts,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}