{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport Product from \"../../models/Product\";\nimport { ADD_PRODUCT, DELETE_PRODUCT, FETCH_PRODUCTS, searchProduct, SEARCH_PRODUCT, UPDATE_PRODUCT } from \"./actions\";\nconst initialState = {\n  products: []\n};\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      const id = action.productData.id;\n      const title = action.productData.title;\n      const price = action.productData.price;\n      const image = action.productData.image;\n      const description = action.productData.description;\n      const newProduct = new Product(id, title, price, image, description);\n      return {\n        products: state.products.concat(newProduct)\n      };\n\n    case FETCH_PRODUCTS:\n      return {\n        products: action.products\n      };\n\n    case DELETE_PRODUCT:\n      const productId = action.productId;\n      const updatedProducts = state.products.filter(product => product._id !== productId);\n      return {\n        products: updatedProducts\n      };\n\n    case UPDATE_PRODUCT:\n      const prodId = action.id;\n      const updatePr = [...state.products];\n      const selectedProductIndex = state.products.findIndex(p => p._id === prodId);\n      const newUpdateProduct = new Product(prodId, action.productData.title, action.productData.price, action.productData.image, action.productData.description);\n      updatePr[selectedProductIndex] = newUpdateProduct;\n      return {\n        products: updatePr\n      };\n\n    case SEARCH_PRODUCT:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/user/Desktop/Projects/Node Js/Recap/nodeJS-ReactJS-Crud/frontend/src/store/product/reducer.js"],"names":["act","Product","ADD_PRODUCT","DELETE_PRODUCT","FETCH_PRODUCTS","searchProduct","SEARCH_PRODUCT","UPDATE_PRODUCT","initialState","products","productReducer","state","action","type","id","productData","title","price","image","description","newProduct","concat","productId","updatedProducts","filter","product","_id","prodId","updatePr","selectedProductIndex","findIndex","p","newUpdateProduct"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,cANF,QAOO,WAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAL;AACE,YAAMY,EAAE,GAAGF,MAAM,CAACG,WAAP,CAAmBD,EAA9B;AACA,YAAME,KAAK,GAAGJ,MAAM,CAACG,WAAP,CAAmBC,KAAjC;AACA,YAAMC,KAAK,GAAGL,MAAM,CAACG,WAAP,CAAmBE,KAAjC;AACA,YAAMC,KAAK,GAAGN,MAAM,CAACG,WAAP,CAAmBG,KAAjC;AACA,YAAMC,WAAW,GAAGP,MAAM,CAACG,WAAP,CAAmBI,WAAvC;AAEA,YAAMC,UAAU,GAAG,IAAInB,OAAJ,CAAYa,EAAZ,EAAgBE,KAAhB,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,WAArC,CAAnB;AAEA,aAAO;AACLV,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeY,MAAf,CAAsBD,UAAtB;AADL,OAAP;;AAGF,SAAKhB,cAAL;AACE,aAAO;AACLK,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AADZ,OAAP;;AAGF,SAAKN,cAAL;AACE,YAAMmB,SAAS,GAAGV,MAAM,CAACU,SAAzB;AACA,YAAMC,eAAe,GAAGZ,KAAK,CAACF,QAAN,CAAee,MAAf,CACrBC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBJ,SADP,CAAxB;AAGA,aAAO;AACLb,QAAAA,QAAQ,EAAEc;AADL,OAAP;;AAIF,SAAKhB,cAAL;AACE,YAAMoB,MAAM,GAAGf,MAAM,CAACE,EAAtB;AACA,YAAMc,QAAQ,GAAG,CAAC,GAAGjB,KAAK,CAACF,QAAV,CAAjB;AACA,YAAMoB,oBAAoB,GAAGlB,KAAK,CAACF,QAAN,CAAeqB,SAAf,CAC1BC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUC,MADU,CAA7B;AAGA,YAAMK,gBAAgB,GAAG,IAAI/B,OAAJ,CACvB0B,MADuB,EAEvBf,MAAM,CAACG,WAAP,CAAmBC,KAFI,EAGvBJ,MAAM,CAACG,WAAP,CAAmBE,KAHI,EAIvBL,MAAM,CAACG,WAAP,CAAmBG,KAJI,EAKvBN,MAAM,CAACG,WAAP,CAAmBI,WALI,CAAzB;AAOAS,MAAAA,QAAQ,CAACC,oBAAD,CAAR,GAAiCG,gBAAjC;AAEA,aAAO;AACLvB,QAAAA,QAAQ,EAAEmB;AADL,OAAP;;AAIF,SAAKtB,cAAL;AACE,aAAO,EACL,GAAGK;AADE,OAAP;;AAIF;AACE,aAAOA,KAAP;AAnDJ;AAqDD,CAtDM","sourcesContent":["import { act } from \"react-dom/test-utils\";\nimport Product from \"../../models/Product\";\nimport {\n  ADD_PRODUCT,\n  DELETE_PRODUCT,\n  FETCH_PRODUCTS,\n  searchProduct,\n  SEARCH_PRODUCT,\n  UPDATE_PRODUCT,\n} from \"./actions\";\n\nconst initialState = {\n  products: [],\n};\n\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_PRODUCT:\n      const id = action.productData.id;\n      const title = action.productData.title;\n      const price = action.productData.price;\n      const image = action.productData.image;\n      const description = action.productData.description;\n\n      const newProduct = new Product(id, title, price, image, description);\n\n      return {\n        products: state.products.concat(newProduct),\n      };\n    case FETCH_PRODUCTS:\n      return {\n        products: action.products,\n      };\n    case DELETE_PRODUCT:\n      const productId = action.productId;\n      const updatedProducts = state.products.filter(\n        (product) => product._id !== productId\n      );\n      return {\n        products: updatedProducts,\n      };\n\n    case UPDATE_PRODUCT:\n      const prodId = action.id;\n      const updatePr = [...state.products];\n      const selectedProductIndex = state.products.findIndex(\n        (p) => p._id === prodId\n      );\n      const newUpdateProduct = new Product(\n        prodId,\n        action.productData.title,\n        action.productData.price,\n        action.productData.image,\n        action.productData.description\n      );\n      updatePr[selectedProductIndex] = newUpdateProduct;\n\n      return {\n        products: updatePr,\n      };\n\n    case SEARCH_PRODUCT:\n      return {\n        ...state,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}