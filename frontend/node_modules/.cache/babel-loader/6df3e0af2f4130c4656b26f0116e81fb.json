{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/Projects/Node Js/Recap/nodeJS-ReactJS-Crud/frontend/src/components/product/AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport * as actions from \"../../store/product/actions\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INPUT_CHANGE = \"INPUT_CHANGE\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case INPUT_CHANGE:\n      const {\n        name,\n        value\n      } = action.payload;\n      return { ...state,\n        [name]: value\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst AddProduct = () => {\n  _s();\n\n  let History = useHistory();\n  const params = useLocation();\n  let productId = \"\";\n  productId = params.state ? params.state.productId : \"\";\n  const products = useSelector(state => state.products.products);\n  const selectedProduct = products.find(product => product._id === productId);\n  const initialState = {\n    title: selectedProduct ? selectedProduct.title : \"\",\n    price: selectedProduct ? selectedProduct.price : \"\",\n    image: selectedProduct ? selectedProduct.image : \"\",\n    description: selectedProduct ? selectedProduct.description : \"\"\n  };\n  const {\n    errors,\n    register,\n    handleSubmit\n  } = useForm();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const dispatchRedux = useDispatch();\n\n  const inputChangeHnadler = (name, value) => {\n    dispatch({\n      type: INPUT_CHANGE,\n      payload: {\n        name: name,\n        value: value\n      }\n    });\n  };\n\n  const onSubmithandler = () => {\n    if (productId) {\n      dispatchRedux(actions.updateProduct(productId, state.title, state.price, state.image, state.description)).then(() => {\n        History.push(\"/\");\n      });\n    } else {\n      dispatchRedux(actions.addProduct(state.title, state.price, state.image, state.description)).then(() => {\n        History.push(\"/\");\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: 15\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmithandler),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: register({\n            required: true,\n            min: 5\n          }),\n          name: \"title\",\n          value: state.title,\n          onChange: e => inputChangeHnadler(\"title\", e.target.value),\n          className: \"form-control \",\n          placeholder: \"Enter title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert alert-danger mb-2 mt-2\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          ref: register({\n            required: false\n          }),\n          name: \"price\",\n          value: state.price,\n          onChange: e => inputChangeHnadler(\"price\", e.target.value),\n          className: \"form-control\",\n          placeholder: \"Enter Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), errors.price && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert alert-danger mb-2 mt-2\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: register({\n            required: selectedProduct ? false : true\n          }),\n          name: \"image\",\n          onChange: e => inputChangeHnadler(\"image\", e.target.files[0]),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), errors.image && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert alert-danger mb-2 mt-2\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: register({\n            required: true\n          }),\n          name: \"description\",\n          className: \"form-control\",\n          value: state.description,\n          onChange: e => inputChangeHnadler(\"description\", e.target.value),\n          placeholder: \"Enter description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"alert alert-danger mb-2 mt-2\",\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: productId ? \"EDIT PRODUCT\" : \"ADD PRODUCT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddProduct, \"KhTF9PGuYCbzymtNKTm3AmpkkCI=\", false, function () {\n  return [useHistory, useLocation, useSelector, useForm, useDispatch];\n});\n\n_c = AddProduct;\nexport default AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProduct\");","map":{"version":3,"sources":["/Users/user/Desktop/Projects/Node Js/Recap/nodeJS-ReactJS-Crud/frontend/src/components/product/AddProduct.js"],"names":["React","useReducer","actions","useForm","useDispatch","useSelector","useHistory","useLocation","Redirect","INPUT_CHANGE","reducer","state","action","type","name","value","payload","AddProduct","History","params","productId","products","selectedProduct","find","product","_id","initialState","title","price","image","description","errors","register","handleSubmit","dispatch","dispatchRedux","inputChangeHnadler","onSubmithandler","updateProduct","then","push","addProduct","maxWidth","margin","required","min","e","target","files"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport * as actions from \"../../store/product/actions\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation, Redirect } from \"react-router-dom\";\n\nconst INPUT_CHANGE = \"INPUT_CHANGE\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case INPUT_CHANGE:\n      const { name, value } = action.payload;\n      return {\n        ...state,\n        [name]: value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst AddProduct = () => {\n  let History = useHistory();\n  const params = useLocation();\n  let productId = \"\";\n\n  productId = params.state ? params.state.productId : \"\";\n  const products = useSelector((state) => state.products.products);\n  const selectedProduct = products.find((product) => product._id === productId);\n\n  const initialState = {\n    title: selectedProduct ? selectedProduct.title : \"\",\n    price: selectedProduct ? selectedProduct.price : \"\",\n    image: selectedProduct ? selectedProduct.image : \"\",\n    description: selectedProduct ? selectedProduct.description : \"\",\n  };\n\n  const { errors, register, handleSubmit } = useForm();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const dispatchRedux = useDispatch();\n\n  const inputChangeHnadler = (name, value) => {\n    dispatch({\n      type: INPUT_CHANGE,\n      payload: {\n        name: name,\n        value: value,\n      },\n    });\n  };\n\n  const onSubmithandler = () => {\n    if (productId) {\n      dispatchRedux(\n        actions.updateProduct(\n          productId,\n          state.title,\n          state.price,\n          state.image,\n          state.description\n        )\n      ).then(() => {\n        History.push(\"/\");\n      });\n    } else {\n      dispatchRedux(\n        actions.addProduct(\n          state.title,\n          state.price,\n          state.image,\n          state.description\n        )\n      ).then(() => {\n        History.push(\"/\");\n      });\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: 600, margin: 15 }}>\n      <form onSubmit={handleSubmit(onSubmithandler)}>\n        <div className=\"form-group mb-2\">\n          <input\n            type=\"text\"\n            ref={register({ required: true, min: 5 })}\n            name=\"title\"\n            value={state.title}\n            onChange={(e) => inputChangeHnadler(\"title\", e.target.value)}\n            className=\"form-control \"\n            placeholder=\"Enter title\"\n          />\n          {errors.title && (\n            <p className=\"alert alert-danger mb-2 mt-2\">\n              This field is required\n            </p>\n          )}\n        </div>\n        <div className=\"form-group mb-2\">\n          <input\n            type=\"number\"\n            ref={register({ required: false })}\n            name=\"price\"\n            value={state.price}\n            onChange={(e) => inputChangeHnadler(\"price\", e.target.value)}\n            className=\"form-control\"\n            placeholder=\"Enter Price\"\n          />\n          {errors.price && (\n            <p className=\"alert alert-danger mb-2 mt-2\">\n              This field is required\n            </p>\n          )}\n        </div>\n        <div className=\"form-group mb-2\">\n          <input\n            type=\"file\"\n            ref={register({ required: selectedProduct ? false : true })}\n            name=\"image\"\n            onChange={(e) => inputChangeHnadler(\"image\", e.target.files[0])}\n            className=\"form-control\"\n          />\n          {errors.image && (\n            <p className=\"alert alert-danger mb-2 mt-2\">\n              This field is required\n            </p>\n          )}\n        </div>\n        <div className=\"form-group mb-2\">\n          <input\n            type=\"text\"\n            ref={register({ required: true })}\n            name=\"description\"\n            className=\"form-control\"\n            value={state.description}\n            onChange={(e) => inputChangeHnadler(\"description\", e.target.value)}\n            placeholder=\"Enter description\"\n          />\n          {errors.description && (\n            <p className=\"alert alert-danger mb-2 mt-2\">\n              This field is required\n            </p>\n          )}\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          {productId ? \"EDIT PRODUCT\" : \"ADD PRODUCT\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddProduct;\n"]},"metadata":{},"sourceType":"module"}